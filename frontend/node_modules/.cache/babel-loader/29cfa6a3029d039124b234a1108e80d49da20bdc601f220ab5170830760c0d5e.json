{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppeguerrera/Desktop/myProjects/reactCourse/reactRouterPart2/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Await, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: [/*#__PURE__*/_jsxDEV(EventsList, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function deferAction() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return {\n    events: deferAction()\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","data","events","children","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","deferAction","response","fetch","ok","Response","JSON","stringify","message","status","loader","$RefreshReg$"],"sources":["/Users/giuseppeguerrera/Desktop/myProjects/reactCourse/reactRouterPart2/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { Await, useLoaderData } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nfunction EventsPage() {\n    const data = useLoaderData();\n    const events = data.events;\n\n    return (\n        <Suspense>\n            <Await resolve={events}>\n            <EventsList events={events} />;\n            </Await>\n        </Suspense>\n    )\n}\nexport default EventsPage;\n\nexport async function deferAction() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n            status: 500\n        })\n    } else {\n        return response;\n    }\n}\n\nexport function loader() {\n    return(\n        {events: deferAction()}\n    );\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AAEvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACIJ,OAAA,CAACF,QAAQ;IAAAO,QAAA,eACLL,OAAA,CAACL,KAAK;MAACW,OAAO,EAAEF,MAAO;MAAAC,QAAA,gBACvBL,OAAA,CAACH,UAAU;QAACO,MAAM,EAAEA;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB;AAACR,EAAA,CAXQD,UAAU;EAAA,QACFL,aAAa;AAAA;AAAAe,EAAA,GADrBV,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,WAAWA,CAAA,EAAG;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACvEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOP,QAAQ;EACnB;AACJ;AAEA,OAAO,SAASQ,MAAMA,CAAA,EAAG;EACrB,OACI;IAACjB,MAAM,EAAEQ,WAAW,CAAC;EAAC,CAAC;AAE/B;AAAC,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}